scalar Date
scalar Time
scalar PointObject

type Location {
  lat: Float
  long: Float
}

type Feed {
  feed_index: Int
  feed_publisher_name: String
  feed_publisher_url: String
  feed_location_friendly: String
  feed_lat: Float
  feed_lon: Float
  agencies: [Agency]
  stops: [Stop]
  stops_json: [PointObject]
  routes: [Route]
  stop(stop_id: ID): Stop
}

type Route {
  _id: ID
  route_long_name: String
  route_type: Int
  route_color: String
  route_text_color: String
  route_id: String
  route_short_name: String
  stops: [Stop]
  trips: [Trip]
}

type Agency {
  agency_name: String
  agency_phone: String
  agency_id: ID
  agency_center: Location
  feed_index: Int
  stops: [Stop]
  routes: [Route]
  stop(stop_id: ID!): Stop
}

type Stop {
  id: ID
  loc: Location
  stop_code: String
  stop_name: String
  stop_id: ID
  zone_id: String
  stop_times(date: Date!, routes: [ID]): [StopTime]
  routes(date: Date): [Route]
}

type StopJson {
  id: ID
}

type StopTime {
trip: Trip
  arrival_time: Time
  departure_time: Time
  departure_time_readable: String
  stop_id: ID
  stop_sequence: Int
  stop_headsign: String
  is_even_hour: Boolean
  time_since_last: Time
  time_since_last_readable: String
}

type Trip {
  trip_id: ID
  trip_headsign: String
  route: Route
}

type Query {
  feed(feed_index: Int): Feed
  feeds: [Feed]
  agencies: [Agency]
  agency(agency_id: ID!, feed_index: ID!): Agency
}